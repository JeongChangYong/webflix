<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC    
   "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
   <mapper namespace="webflix.mapper.PurchaseMapper">
   
   <select id="selectNum" resultType="string">
select concat( to_char(now(), 'YYYYMMDD'),coalesce(max(substr(order_num,9))::integer,10000) +1) from orders
where substring(order_num, 1, 8)   = to_char(now(), 'YYYYMMDD') 

</select>
   <insert id="purchaseInsert" parameterType="purchase">
   insert into orders(order_num, order_date, order_price, purchase_status, mem_num)
   values(#{orderNum}, now(), #{orderPrice}, #{purchaseStatus}, #{memNum})
   
   
   </insert>
   
   <insert id="paymentInsert" parameterType="payment">
insert into payment(order_num,
payment_kind,
total_price,
confirm_number,
card_number,
tid,
result_message, payment_date, mem_num, day)
values(#{orderNum},#{paymentKind} , #{totalPrice} , #{confirmNumber} 
		,#{cardNumber} ,#{tid} ,#{resultMessage}, now(), #{memNum} , #{day} )


</insert>



<update id="purchaseStatusUpdate" parameterType="string">
update orders
set purchase_status = #{arg0}
where order_num = #{arg1}

</update>
<select id="purchaseSelect" parameterType="string" resultType="purchase">

select order_num orderNum,
order_date orderDate,
order_price orderPrice,
purchase_status purchaseStatus,
mem_num memNum
from orders
where order_num = #{orderNum}
</select>


<select id="paymentSelect" parameterType="string">
select 1 from payment
where payment_date + (duration || ' days')::interval > payment_date;

</select>





   </mapper>