<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC    
   "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
 <mapper  namespace="webflix.mapper.UserMapper" >
 <update id="userCheckUpdate" parameterType="string">
 	update members set mem_email_conf = 'T'
 	where mem_email_conf is null
 	and mem_email = #{email}
 
 </update>
 
 
 <insert id="userInsert" parameterType="member">
 insert into members(mem_num, mem_id,mem_pw,mem_name,mem_addr
 ,mem_addr_detail,mem_post,mem_phone,mem_regist,mem_jumin
 ,mem_email,mem_email_conf,mem_point,
mem_event_win)
  values((select concat('mem', coalesce(max(substring(mem_num,4)::integer),1000000)+1)  from members) 
  , #{memId} , #{memPw} , #{memName} , #{memAddr} 
  , #{memAddrDetail} , #{memPost} , #{memPhone} 
  , now(), #{memJumin} , #{memEmail} , null, 0 , 'F');
 
 
 </insert>
 
 <resultMap type="authinfo" id="authInfoResultMap">
 <constructor>
 <arg column="mem_id" javaType="string" />
  <arg column="mem_pw" javaType="string" />
   <arg column="mem_name" javaType="string" />
    <arg column="grade" javaType="string"/>
     <arg column="mem_email" javaType="string"/>
      <arg column="mem_email_conf" javaType="string"/>
 
 
 </constructor>
 
 
 </resultMap>
 
 <select id="loginSelect" parameterType="string" resultType="authInfo">
  
 select mem_id userId , mem_pw userPw , mem_name userName , 'mem' grade , mem_email  userEmail, mem_email_conf userEmailCheck 
 from members
 where mem_id=#{userId}
 union
 select emp_id, emp_pw, emp_name, 'emp', emp_email, 'T'
 from employees
 where emp_id=#{userId}
 
 </select>
 
 
 
 </mapper>  